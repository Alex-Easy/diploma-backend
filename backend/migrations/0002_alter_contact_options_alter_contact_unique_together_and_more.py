# Generated by Django 5.1.4 on 2024-12-17 16:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='contact',
            options={},
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='contact',
            name='apartment',
            field=models.CharField(default='', help_text='Номер квартиры', max_length=255, verbose_name='Квартира'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contact',
            name='city',
            field=models.CharField(default='', help_text='Город проживания пользователя', max_length=255, verbose_name='Город'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contact',
            name='house',
            field=models.CharField(default='', help_text='Номер дома', max_length=255, verbose_name='Дом'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contact',
            name='phone',
            field=models.CharField(default='', help_text='Контактный телефон пользователя', max_length=15, verbose_name='Телефон'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contact',
            name='street',
            field=models.CharField(default='', help_text='Улица проживания пользователя', max_length=255, verbose_name='Улица'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Уникальный адрес электронной почты', max_length=254, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(help_text='Имя пользователя', max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Фамилия пользователя', max_length=255, verbose_name='Фамилия')),
                ('company', models.CharField(help_text='Компания пользователя', max_length=255, verbose_name='Компания')),
                ('position', models.CharField(help_text='Должность пользователя', max_length=255, verbose_name='Должность')),
                ('groups', models.ManyToManyField(blank=True, help_text='Группы, к которым принадлежит пользователь', related_name='backend_user_groups', to='auth.group', verbose_name='Группы')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Права доступа, назначенные пользователю', related_name='backend_user_permissions', to='auth.permission', verbose_name='Права пользователя')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='contact',
            name='user',
            field=models.ForeignKey(help_text='Пользователь, для которого указан контакт', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='backend.user', verbose_name='Пользователь'),
        ),
        migrations.RemoveField(
            model_name='contact',
            name='type',
        ),
        migrations.RemoveField(
            model_name='contact',
            name='value',
        ),
    ]
